{"ast":null,"code":"var _jsxFileName = \"D:\\\\stackoverflow-clone-mern-main\\\\stackoverflow-clone-mern-main\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport StackOverflow from \"./components/StackOverflow\";\nimport Header from \"./components/Header\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport ViewQuestion from \"./components/ViewQuestion\";\nimport Auth from \"./components/Auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./feature/userSlice\";\nimport { useEffect } from \"react\";\nimport { auth } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      if (authUser) {\n        dispatch(login({\n          uid: authUser.uid,\n          photo: authUser.photoURL,\n          displayName: authUser.displayName,\n          email: authUser.email\n        }));\n      } else {\n        dispatch(logout());\n      } // console.log(authUser);\n\n    });\n  }, [dispatch]);\n\n  const PrivateRoute = ({\n    component: Component,\n    ...rest\n  }) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => user ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/auth\",\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/auth\",\n          component: Auth\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/\",\n          component: StackOverflow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/add-question\",\n          component: AddQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          exact: true,\n          path: \"/question\",\n          component: ViewQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5J/jBDPxOCuWDcqNaifzAwnDqoU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/stackoverflow-clone-mern-main/stackoverflow-clone-mern-main/frontend/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","Redirect","StackOverflow","Header","AddQuestion","ViewQuestion","Auth","useDispatch","useSelector","login","logout","selectUser","useEffect","auth","App","user","dispatch","onAuthStateChanged","authUser","uid","photo","photoURL","displayName","email","PrivateRoute","component","Component","rest","props","pathname","state","from","location"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport StackOverflow from \"./components/StackOverflow\";\nimport Header from \"./components/Header\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport ViewQuestion from \"./components/ViewQuestion\";\nimport Auth from \"./components/Auth\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, logout, selectUser } from \"./feature/userSlice\";\nimport { useEffect } from \"react\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            photo: authUser.photoURL,\n            displayName: authUser.displayName,\n            email: authUser.email,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n      // console.log(authUser);\n    });\n  }, [dispatch]);\n\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n      {...rest}\n      render={(props) =>\n        user ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/auth\",\n              state: {\n                from: props.location,\n              },\n            }}\n          />\n        )\n      }\n    />\n  );\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/auth\" component={Auth} />\n          <PrivateRoute exact path=\"/\" component={StackOverflow} />\n          <PrivateRoute exact path=\"/add-question\" component={AddQuestion} />\n          <PrivateRoute exact path=\"/question\" component={ViewQuestion} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}