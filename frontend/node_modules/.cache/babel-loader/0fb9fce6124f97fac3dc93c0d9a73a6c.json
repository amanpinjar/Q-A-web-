{"ast":null,"code":"function stringToColor(string) {\n  let hash = 0;\n  let i;\n  /* eslint-disable no-bitwise */\n\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (i = 0; i < 3; i += 1) {\n    const value = hash >> i * 8 & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n\n  return color;\n}\n\nexport function stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: name ? stringToColor(name) : \"rgba(255,255,255,0.8)\"\n    },\n    children: name && `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`\n  };\n}","map":{"version":3,"sources":["D:/stackoverflow-clone-mern-main/stackoverflow-clone-mern-main/frontend/src/utils/Avatar.js"],"names":["stringToColor","string","hash","i","length","charCodeAt","color","value","toString","substr","stringAvatar","name","sx","bgcolor","children","split"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,CAAJ;AAEA;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGF,MAAM,CAACG,MAAvB,EAA+BD,CAAC,IAAI,CAApC,EAAuC;AACrCD,IAAAA,IAAI,GAAGD,MAAM,CAACI,UAAP,CAAkBF,CAAlB,KAAwB,CAACD,IAAI,IAAI,CAAT,IAAcA,IAAtC,CAAP;AACD;;AAED,MAAII,KAAK,GAAG,GAAZ;;AAEA,OAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG,CAAhB,EAAmBA,CAAC,IAAI,CAAxB,EAA2B;AACzB,UAAMI,KAAK,GAAIL,IAAI,IAAKC,CAAC,GAAG,CAAd,GAAoB,IAAlC;AACAG,IAAAA,KAAK,IAAK,KAAIC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAmB,EAAxB,CAA0BC,MAA1B,CAAiC,CAAC,CAAlC,CAAT;AACD;AACD;;;AAEA,SAAOH,KAAP;AACD;;AAED,OAAO,SAASI,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,SAAO;AACLC,IAAAA,EAAE,EAAE;AACFC,MAAAA,OAAO,EAAEF,IAAI,GAAGX,aAAa,CAACW,IAAD,CAAhB,GAAyB;AADpC,KADC;AAILG,IAAAA,QAAQ,EAAEH,IAAI,IAAK,GAAEA,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,CAAsB,GAAEJ,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,CAAsB;AAJ9D,GAAP;AAMD","sourcesContent":["function stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport function stringAvatar(name) {\n  return {\n    sx: {\n      bgcolor: name ? stringToColor(name) : \"rgba(255,255,255,0.8)\",\n    },\n    children: name && `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}