{"ast":null,"code":"var _jsxFileName = \"D:\\\\q-a\\\\frontend\\\\src\\\\components\\\\StackOverflow\\\\AllQuestions.js\";\nimport { Avatar } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"./css/AllQuestions.css\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Link } from \"react-router-dom\";\nimport { stringAvatar } from \"../../utils/Avatar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AllQuestions({\n  data\n}) {\n  var _data$answerDetails, _data$user, _data$user2, _data$user3;\n\n  function truncate(str, n) {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  let tags = JSON.parse(data === null || data === void 0 ? void 0 : data.tags[0]); // console.log();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-questions\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-questions-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-questions-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"all-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"all-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"votes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"all-option\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: data === null || data === void 0 ? void 0 : (_data$answerDetails = data.answerDetails) === null || _data$answerDetails === void 0 ? void 0 : _data$answerDetails.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"answers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"all-option\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"2 views\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-answer\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/question?q=${data === null || data === void 0 ? void 0 : data._id}`,\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"answer by chatGPT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: \"90%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ReactHtmlParser(truncate(data.body, 200))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: tags.map(_tag => /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: \"10px 5px\",\n              padding: \"5px 10px\",\n              backgroundColor: \"#007cd446\",\n              borderRadius: \"3px\"\n            },\n            children: _tag\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"author\",\n          children: [/*#__PURE__*/_jsxDEV(\"small\", {\n            children: data.create_at\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-details\",\n            children: [/*#__PURE__*/_jsxDEV(Avatar, { ...stringAvatar(data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.displayName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (data === null || data === void 0 ? void 0 : (_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.displayName) ? data === null || data === void 0 ? void 0 : (_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.displayName : \"Natalie lee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AllQuestions;\nexport default AllQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuestions\");","map":{"version":3,"sources":["D:/q-a/frontend/src/components/StackOverflow/AllQuestions.js"],"names":["Avatar","React","useState","ReactHtmlParser","Link","stringAvatar","AllQuestions","data","truncate","str","n","length","substr","tags","JSON","parse","answerDetails","_id","title","maxWidth","body","display","map","_tag","margin","padding","backgroundColor","borderRadius","create_at","user","displayName"],"mappings":"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","sourcesContent":["import { Avatar } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"./css/AllQuestions.css\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Link } from \"react-router-dom\";\nimport { stringAvatar } from \"../../utils/Avatar\";\n\nfunction AllQuestions({ data }) {\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  let tags = JSON.parse(data?.tags[0]);\n  // console.log();\n  return (\n    <div className=\"all-questions\">\n      <div className=\"all-questions-container\">\n        <div className=\"all-questions-left\">\n          <div className=\"all-options\">\n            <div className=\"all-option\">\n              <p>0</p>\n              <span>votes</span>\n            </div>\n            <div className=\"all-option\">\n              <p>{data?.answerDetails?.length}</p>\n              <span>answers</span>\n            </div>\n            <div className=\"all-option\">\n              <small>2 views</small>\n            </div>\n          </div>\n        </div>\n        <div className=\"question-answer\">\n          <Link to={`/question?q=${data?._id}`}>{data.title}</Link>\n          <button>answer by chatGPT</button>\n\n          {/* <a href=>{data.title}</a> */}\n\n          <div\n            style={{\n              maxWidth: \"90%\",\n            }}\n          >\n            <div>{ReactHtmlParser(truncate(data.body, 200))}</div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n            }}\n          >\n            {tags.map((_tag) => (\n              <p\n                style={{\n                  margin: \"10px 5px\",\n                  padding: \"5px 10px\",\n                  backgroundColor: \"#007cd446\",\n                  borderRadius: \"3px\",\n                }}\n              >\n                {_tag}\n              </p>\n            ))}\n          </div>\n          <div className=\"author\">\n            <small>{data.create_at}</small>\n            <div className=\"auth-details\">\n              <Avatar {...stringAvatar(data?.user?.displayName)} />\n              <p>\n                {data?.user?.displayName\n                  ? data?.user?.displayName\n                  : \"Natalie lee\"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AllQuestions;\n"]},"metadata":{},"sourceType":"module"}