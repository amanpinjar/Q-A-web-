{"ast":null,"code":"import { css, setup } from 'goober';\nimport React, { useState, useEffect } from 'react';\n/**\r\n * A minimal utility to combine classes\r\n *\r\n * @export\r\n * @param {(string[] | string)} obj\r\n * @returns {string}\r\n */\n\nfunction cc() {\n  for (var _len = arguments.length, obj = new Array(_len), _key = 0; _key < _len; _key++) {\n    obj[_key] = arguments[_key];\n  }\n\n  return obj.join(\" \");\n}\n\nvar tagStyles = /*#__PURE__*/css({\n  alignItems: \"center\",\n  background: \"var(--rti-tag)\",\n  borderRadius: \"var(--rti-radius)\",\n  display: \"inline-flex\",\n  justifyContent: \"center\",\n  paddingLeft: \"var(--rti-s)\",\n  button: {\n    background: \"none\",\n    border: 0,\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    lineHeight: \"inherit\",\n    padding: \"0 var(--rti-s)\",\n    \"&:hover\": {\n      color: \"var(--rti-tag-remove)\"\n    }\n  }\n});\n\nfunction Tag(_ref) {\n  var text = _ref.text,\n      remove = _ref.remove;\n\n  var handleOnRemove = function handleOnRemove(e) {\n    e.stopPropagation();\n    remove(text);\n  };\n\n  return React.createElement(\"span\", {\n    className: cc(\"rti--tag\", tagStyles)\n  }, React.createElement(\"span\", null, text), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOnRemove,\n    \"aria-label\": \"remove \" + text\n  }, \"\\u2715\"));\n}\n\nsetup(React.createElement);\nvar RTIContainer = /*#__PURE__*/css({\n  \"--rtiBg\": \"#fff\",\n  \"--rtiBorder\": \"#ccc\",\n  \"--rtiMain\": \"#3182ce\",\n  \"--rtiRadius\": \"0.375rem\",\n  \"--rtiS\": \"0.5rem\",\n  \"--rtiTag\": \"#edf2f7\",\n  \"--rtiTagRemove\": \"#e53e3e\",\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\"\n  },\n  alignItems: \"center\",\n  bg: \"var(--rti-bg)\",\n  border: \"1px solid var(--rti-border)\",\n  borderRadius: \"var(--rti-radius)\",\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gap: \"var(--rti-s)\",\n  lineHeight: 1.4,\n  padding: \"var(--rti-s)\",\n  \"&:focus-within\": {\n    borderColor: \"var(--rti-main)\",\n    boxShadow: \"var(--rti-main) 0px 0px 0px 1px\"\n  }\n});\nvar RTIInput = /*#__PURE__*/css({\n  border: 0,\n  outline: 0,\n  fontSize: \"inherit\",\n  lineHeight: \"inherit\",\n  width: \"50%\"\n});\nvar defaultSeprators = [\"Enter\"];\n\nvar TagsInput = function TagsInput(_ref) {\n  var name = _ref.name,\n      placeHolder = _ref.placeHolder,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      onBlur = _ref.onBlur,\n      seprators = _ref.seprators,\n      onExisting = _ref.onExisting,\n      onRemoved = _ref.onRemoved;\n\n  var _useState = useState(value || []),\n      tags = _useState[0],\n      setTags = _useState[1];\n\n  useEffect(function () {\n    onChange && onChange(tags);\n  }, [tags]);\n\n  var handleOnKeyUp = function handleOnKeyUp(e) {\n    e.stopPropagation();\n    var text = e.target.value;\n\n    if (e.key === \"Backspace\" && tags.length && !text) {\n      setTags(tags.slice(0, -1));\n    }\n\n    if (text && (seprators || defaultSeprators).includes(e.key)) {\n      if (tags.includes(text)) {\n        onExisting && onExisting(text);\n        return;\n      }\n\n      setTags([].concat(tags, [text]));\n      e.target.value = \"\";\n      e.preventDefault();\n    }\n  };\n\n  var onTagRemove = function onTagRemove(text) {\n    setTags(tags.filter(function (tag) {\n      return tag !== text;\n    }));\n    onRemoved && onRemoved(text);\n  };\n\n  return React.createElement(\"div\", {\n    \"aria-labelledby\": name,\n    className: cc(\"rti--container\", RTIContainer)\n  }, tags.map(function (tag) {\n    return React.createElement(Tag, {\n      key: tag,\n      text: tag,\n      remove: onTagRemove\n    });\n  }), React.createElement(\"input\", {\n    className: cc(\"rti--input\", RTIInput),\n    type: \"text\",\n    name: name,\n    placeholder: placeHolder,\n    onKeyDown: handleOnKeyUp,\n    onBlur: onBlur\n  }));\n};\n\nexport { TagsInput };","map":{"version":3,"sources":["../src/classnames.tsx","../src/tag.tsx","../src/index.tsx"],"names":["cc","obj","tagStyles","css","alignItems","background","borderRadius","display","justifyContent","paddingLeft","button","border","cursor","lineHeight","padding","color","Tag","text","remove","handleOnRemove","e","className","React","type","onClick","setup","RTIContainer","boxSizing","transition","bg","flexWrap","gap","borderColor","boxShadow","RTIInput","outline","fontSize","width","defaultSeprators","TagsInput","name","placeHolder","value","onChange","onBlur","seprators","onExisting","onRemoved","tags","setTags","useState","useEffect","handleOnKeyUp","onTagRemove","tag","key","placeholder","onKeyDown"],"mappings":"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","sourcesContent":["/**\n * A minimal utility to combine classes\n *\n * @export\n * @param {(string[] | string)} obj\n * @returns {string}\n */\nexport default function cc(...obj: (string | number)[]): string {\n  return obj.join(\" \");\n}\n","import React from \"react\";\nimport { css } from \"goober\";\nimport cc from \"./classnames\";\n\ninterface TagProps {\n  text: string;\n  remove: any;\n}\n\nconst tagStyles = css({\n  alignItems: \"center\",\n  background: \"var(--rti-tag)\",\n  borderRadius: \"var(--rti-radius)\",\n  display: \"inline-flex\",\n  justifyContent: \"center\",\n  paddingLeft: \"var(--rti-s)\",\n\n  button: {\n    background: \"none\",\n    border: 0,\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    lineHeight: \"inherit\",\n    padding: \"0 var(--rti-s)\",\n\n    \"&:hover\": {\n      color: \"var(--rti-tag-remove)\",\n    },\n  },\n});\n\nexport default function Tag({ text, remove }: TagProps) {\n  const handleOnRemove = e => {\n    e.stopPropagation();\n    remove(text);\n  };\n\n  return (\n    <span className={cc(\"rti--tag\", tagStyles)}>\n      <span>{text}</span>\n      <button\n        type=\"button\"\n        onClick={handleOnRemove}\n        aria-label={`remove ${text}`}\n      >\n        &#10005;\n      </button>\n    </span>\n  );\n}\n","import { css, setup } from \"goober\";\nimport React, { useEffect, useState } from \"react\";\n\nimport cc from \"./classnames\";\nimport Tag from \"./tag\";\n\nexport interface TagsInputProps {\n  name?: string;\n  placeHolder?: string;\n  value?: string[];\n  onChange?: (tags: string[]) => void;\n  onBlur?: any;\n  seprators?: string[];\n  onExisting?: (tag: string) => void;\n  onRemoved?: (tag: string) => void;\n}\n\n// initialize goober once\nsetup(React.createElement);\n\nconst RTIContainer = css({\n  \"--rtiBg\": \"#fff\",\n  \"--rtiBorder\": \"#ccc\",\n  \"--rtiMain\": \"#3182ce\",\n  \"--rtiRadius\": \"0.375rem\",\n  \"--rtiS\": \"0.5rem\",\n  \"--rtiTag\": \"#edf2f7\",\n  \"--rtiTagRemove\": \"#e53e3e\",\n\n  \"*\": {\n    boxSizing: \"border-box\",\n    transition: \"all 0.2s ease\",\n  },\n\n  alignItems: \"center\",\n  bg: \"var(--rti-bg)\",\n  border: \"1px solid var(--rti-border)\",\n  borderRadius: \"var(--rti-radius)\",\n  display: \"flex\",\n  flexWrap: \"wrap\",\n  gap: \"var(--rti-s)\",\n  lineHeight: 1.4,\n  padding: \"var(--rti-s)\",\n\n  \"&:focus-within\": {\n    borderColor: \"var(--rti-main)\",\n    boxShadow: \"var(--rti-main) 0px 0px 0px 1px\",\n  },\n});\n\nconst RTIInput = css({\n  border: 0,\n  outline: 0,\n  fontSize: \"inherit\",\n  lineHeight: \"inherit\",\n  width: \"50%\",\n});\n\nconst defaultSeprators = [\"Enter\"];\n\nexport const TagsInput = ({\n  name,\n  placeHolder,\n  value,\n  onChange,\n  onBlur,\n  seprators,\n  onExisting,\n  onRemoved,\n}: TagsInputProps) => {\n  const [tags, setTags] = useState(value || []);\n\n  useEffect(() => {\n    onChange && onChange(tags);\n  }, [tags]);\n\n  const handleOnKeyUp = e => {\n    e.stopPropagation();\n\n    const text = e.target.value;\n\n    if (e.key === \"Backspace\" && tags.length && !text) {\n      setTags(tags.slice(0, -1));\n    }\n\n    if (text && (seprators || defaultSeprators).includes(e.key)) {\n      if (tags.includes(text)) {\n        onExisting && onExisting(text);\n        return;\n      }\n      setTags([...tags, text]);\n      e.target.value = \"\";\n      e.preventDefault();\n    }\n  };\n\n  const onTagRemove = text => {\n    setTags(tags.filter(tag => tag !== text));\n    onRemoved && onRemoved(text);\n  };\n\n  return (\n    <div aria-labelledby={name} className={cc(\"rti--container\", RTIContainer)}>\n      {tags.map(tag => (\n        <Tag key={tag} text={tag} remove={onTagRemove} />\n      ))}\n\n      <input\n        className={cc(\"rti--input\", RTIInput)}\n        type=\"text\"\n        name={name}\n        placeholder={placeHolder}\n        onKeyDown={handleOnKeyUp}\n        onBlur={onBlur}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}