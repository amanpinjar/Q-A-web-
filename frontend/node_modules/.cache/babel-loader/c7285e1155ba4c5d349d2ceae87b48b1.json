{"ast":null,"code":"var _jsxFileName = \"D:\\\\q-a\\\\frontend\\\\src\\\\components\\\\AddQuestion\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\n\nimport \"./index.css\";\nimport Editor from \"react-quill/lib/toolbar\";\nimport axios from \"axios\";\nimport { TagsInput } from \"react-tag-input-component\";\nimport { selectUser } from \"../../feature/userSlice\";\nimport { useHistory } from \"react-router-dom\"; // import ChipsArray from \"./TagsInput\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Index() {\n  _s();\n\n  const user = useSelector(selectUser);\n  var toolbarOptions = [[\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n  [\"blockquote\", \"code-block\"], [{\n    header: 1\n  }, {\n    header: 2\n  }], // custom button values\n  [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }], [{\n    script: \"sub\"\n  }, {\n    script: \"super\"\n  }], // superscript/subscript\n  [{\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], // outdent/indent\n  [{\n    direction: \"rtl\"\n  }], // text direction\n  [{\n    size: [\"small\", false, \"large\", \"huge\"]\n  }], // custom dropdown\n  [{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], // dropdown with defaults from theme\n  [{\n    font: []\n  }], [{\n    align: []\n  }], [\"clean\"] // remove formatting button\n  ];\n  Editor.modules = {\n    syntax: false,\n    toolbar: toolbarOptions,\n    clipboard: {\n      // toggle to add extra line breaks when pasting HTML:\n      matchVisual: false\n    }\n  };\n  /*\n   * Quill editor formats\n   * See https://quilljs.com/docs/formats/\n   */\n\n  Editor.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n  /*\n   * PropType validation\n   */\n\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tag, setTag] = useState([]);\n  const history = useHistory();\n\n  const handleQuill = value => {\n    setBody(value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (title !== \"\" && body !== \"\") {\n      const bodyJSON = {\n        title: title,\n        body: body,\n        tag: JSON.stringify(tag),\n        user: user\n      };\n      await axios.post(\"/api/question\", bodyJSON).then(res => {\n        // console.log(res.data);\n        alert(\"Question added successfully\");\n        history.push(\"/\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-question\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"head-title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Ask a public question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-option\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Be specific and imagine you\\u2019re asking a question to another person\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: title,\n                onChange: e => setTitle(e.target.value),\n                type: \"text\",\n                placeholder: \"e.g Is there an R function for finding teh index of an element in a vector?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-option\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Include all the information someone would need to answer your question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                value: body,\n                onChange: handleQuill,\n                modules: Editor.modules,\n                className: \"react-quill\",\n                theme: \"snow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-option\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"title\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Add up to 5 tags to describe what your question is about\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TagsInput, {\n                value: tag,\n                onChange: setTag,\n                name: \"fruits\",\n                placeHolder: \"press enter to add new tag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"button\",\n        children: \"Add your question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Index, \"V56bw3x4WcWTA/b5nznzCfy9YD4=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["D:/q-a/frontend/src/components/AddQuestion/index.js"],"names":["React","useEffect","useState","useSelector","ReactQuill","Editor","axios","TagsInput","selectUser","useHistory","Index","user","toolbarOptions","header","list","script","indent","direction","size","color","background","font","align","modules","syntax","toolbar","clipboard","matchVisual","formats","title","setTitle","body","setBody","tag","setTag","history","handleQuill","value","handleSubmit","e","preventDefault","bodyJSON","JSON","stringify","post","then","res","alert","push","catch","err","console","log","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport \"./index.css\";\nimport Editor from \"react-quill/lib/toolbar\";\nimport axios from \"axios\";\nimport { TagsInput } from \"react-tag-input-component\";\nimport { selectUser } from \"../../feature/userSlice\";\nimport { useHistory } from \"react-router-dom\";\n// import ChipsArray from \"./TagsInput\";\n\nfunction Index() {\n  const user = useSelector(selectUser);\n  var toolbarOptions = [\n    [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n    [\"blockquote\", \"code-block\"],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n    [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n    [{ direction: \"rtl\" }], // text direction\n\n    [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    [\"clean\"], // remove formatting button\n  ];\n  Editor.modules = {\n    syntax: false,\n    toolbar: toolbarOptions,\n    clipboard: {\n      // toggle to add extra line breaks when pasting HTML:\n      matchVisual: false,\n    },\n  };\n  /*\n   * Quill editor formats\n   * See https://quilljs.com/docs/formats/\n   */\n  Editor.formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"video\",\n  ];\n\n  /*\n   * PropType validation\n   */\n\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tag, setTag] = useState([]);\n  const history = useHistory();\n\n  const handleQuill = (value) => {\n    setBody(value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (title !== \"\" && body !== \"\") {\n      const bodyJSON = {\n        title: title,\n        body: body,\n        tag: JSON.stringify(tag),\n        user: user,\n      };\n      await axios\n        .post(\"/api/question\", bodyJSON)\n        .then((res) => {\n          // console.log(res.data);\n          alert(\"Question added successfully\");\n          history.push(\"/\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  return (\n    <div className=\"add-question\">\n      <div className=\"add-question-container\">\n        <div className=\"head-title\">\n          <h1>Ask a public question</h1>\n        </div>\n        <div className=\"question-container\">\n          <div className=\"question-options\">\n            <div className=\"question-option\">\n              <div className=\"title\">\n                <h3>Title</h3>\n                <small>\n                  Be specific and imagine you’re asking a question to another\n                  person\n                </small>\n                <input\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"e.g Is there an R function for finding teh index of an element in a vector?\"\n                />\n              </div>\n            </div>\n            <div className=\"question-option\">\n              <div className=\"title\">\n                <h3>Body</h3>\n                <small>\n                  Include all the information someone would need to answer your\n                  question\n                </small>\n                <ReactQuill\n                  value={body}\n                  onChange={handleQuill}\n                  modules={Editor.modules}\n                  className=\"react-quill\"\n                  theme=\"snow\"\n                />\n              </div>\n            </div>\n            <div className=\"question-option\">\n              <div className=\"title\">\n                <h3>Tags</h3>\n                <small>\n                  Add up to 5 tags to describe what your question is about\n                </small>\n                {/* <input\n                  value={tag}\n                  onChange={(e) => setTag(e.target.value)}\n                  data-role=\"tagsinput\"\n                  data-tag-trigger=\"Space\"\n                  type=\"text\"\n                  placeholder=\"e.g. (asp.net-mvc php react json)\"\n                /> */}\n\n                <TagsInput\n                  value={tag}\n                  onChange={setTag}\n                  name=\"fruits\"\n                  placeHolder=\"press enter to add new tag\"\n                />\n\n                {/* <ChipsArray /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <button onClick={handleSubmit} className=\"button\">\n          Add your question\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}