[{"D:\\q-a\\frontend\\src\\index.js":"1","D:\\q-a\\frontend\\src\\reportWebVitals.js":"2","D:\\q-a\\frontend\\src\\App.js":"3","D:\\q-a\\frontend\\src\\app\\store.js":"4","D:\\q-a\\frontend\\src\\firebase.js":"5","D:\\q-a\\frontend\\src\\feature\\userSlice.js":"6","D:\\q-a\\frontend\\src\\components\\ViewQuestion\\index.js":"7","D:\\q-a\\frontend\\src\\components\\Header\\index.js":"8","D:\\q-a\\frontend\\src\\components\\Auth\\index.js":"9","D:\\q-a\\frontend\\src\\components\\StackOverflow\\index.js":"10","D:\\q-a\\frontend\\src\\components\\AddQuestion\\index.js":"11","D:\\q-a\\frontend\\src\\components\\StackOverflow\\Sidebar.js":"12","D:\\q-a\\frontend\\src\\components\\StackOverflow\\Main.js":"13","D:\\q-a\\frontend\\src\\components\\ViewQuestion\\MainQuestion.js":"14","D:\\q-a\\frontend\\src\\components\\StackOverflow\\AllQuestions.js":"15","D:\\q-a\\frontend\\src\\utils\\Avatar.js":"16"},{"size":689,"mtime":1678177676082,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1678172718442,"results":"19","hashOfConfig":"18"},{"size":1875,"mtime":1678172718331,"results":"20","hashOfConfig":"18"},{"size":271,"mtime":1678172718469,"results":"21","hashOfConfig":"18"},{"size":659,"mtime":1678259196069,"results":"22","hashOfConfig":"18"},{"size":438,"mtime":1678172719077,"results":"23","hashOfConfig":"18"},{"size":348,"mtime":1678172719050,"results":"24","hashOfConfig":"18"},{"size":2936,"mtime":1678178193428,"results":"25","hashOfConfig":"18"},{"size":5657,"mtime":1678179070676,"results":"26","hashOfConfig":"18"},{"size":668,"mtime":1678172718857,"results":"27","hashOfConfig":"18"},{"size":4914,"mtime":1678172718548,"results":"28","hashOfConfig":"18"},{"size":2563,"mtime":1678172718820,"results":"29","hashOfConfig":"18"},{"size":1711,"mtime":1678172718781,"results":"30","hashOfConfig":"18"},{"size":9902,"mtime":1678172719010,"results":"31","hashOfConfig":"18"},{"size":2262,"mtime":1678172718743,"results":"32","hashOfConfig":"18"},{"size":615,"mtime":1678172719106,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1a9qggi",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\q-a\\frontend\\src\\index.js",[],["70","71"],"D:\\q-a\\frontend\\src\\reportWebVitals.js",[],"D:\\q-a\\frontend\\src\\App.js",[],"D:\\q-a\\frontend\\src\\app\\store.js",[],"D:\\q-a\\frontend\\src\\firebase.js",["72"],"import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAm2j5QCRCCJlRX0r1qBG_be1bXdXSRdyY\",\n  authDomain: \"stackoverflow-3f0d8.firebaseapp.com\",\n  projectId: \"stackoverflow-3f0d8\",\n  storageBucket: \"stackoverflow-3f0d8.appspot.com\",\n  messagingSenderId: \"76298589116\",\n  appId: \"1:76298589116:web:26ce6feaf0025dbdd511b9\",\n  measurementId: \"G-LDJE2JW8YE\",\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n// const db = firebaseApp.firestore();\nconst auth = getAuth();\nconst provider = new GoogleAuthProvider();\n\nexport { auth, provider };\n// export default db;\n","D:\\q-a\\frontend\\src\\feature\\userSlice.js",[],"D:\\q-a\\frontend\\src\\components\\ViewQuestion\\index.js",[],"D:\\q-a\\frontend\\src\\components\\Header\\index.js",[],"D:\\q-a\\frontend\\src\\components\\Auth\\index.js",[],"D:\\q-a\\frontend\\src\\components\\StackOverflow\\index.js",[],"D:\\q-a\\frontend\\src\\components\\AddQuestion\\index.js",["73"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\"; // ES6\nimport \"./index.css\";\nimport Editor from \"react-quill/lib/toolbar\";\nimport axios from \"axios\";\nimport { TagsInput } from \"react-tag-input-component\";\nimport { selectUser } from \"../../feature/userSlice\";\nimport { useHistory } from \"react-router-dom\";\n// import ChipsArray from \"./TagsInput\";\n\nfunction Index() {\n  const user = useSelector(selectUser);\n  var toolbarOptions = [\n    [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\n    [\"blockquote\", \"code-block\"],\n\n    [{ header: 1 }, { header: 2 }], // custom button values\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\n    [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\n    [{ direction: \"rtl\" }], // text direction\n\n    [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n    [{ color: [] }, { background: [] }], // dropdown with defaults from theme\n    [{ font: [] }],\n    [{ align: [] }],\n\n    [\"clean\"], // remove formatting button\n  ];\n  Editor.modules = {\n    syntax: false,\n    toolbar: toolbarOptions,\n    clipboard: {\n      // toggle to add extra line breaks when pasting HTML:\n      matchVisual: false,\n    },\n  };\n  /*\n   * Quill editor formats\n   * See https://quilljs.com/docs/formats/\n   */\n  Editor.formats = [\n    \"header\",\n    \"font\",\n    \"size\",\n    \"bold\",\n    \"italic\",\n    \"underline\",\n    \"strike\",\n    \"blockquote\",\n    \"list\",\n    \"bullet\",\n    \"indent\",\n    \"link\",\n    \"image\",\n    \"video\",\n  ];\n\n  /*\n   * PropType validation\n   */\n\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [tag, setTag] = useState([]);\n  const history = useHistory();\n\n  const handleQuill = (value) => {\n    setBody(value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (title !== \"\" && body !== \"\") {\n      const bodyJSON = {\n        title: title,\n        body: body,\n        tag: JSON.stringify(tag),\n        user: user,\n      };\n      await axios\n        .post(\"/api/question\", bodyJSON)\n        .then((res) => {\n          // console.log(res.data);\n          alert(\"Question added successfully\");\n          history.push(\"/\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n  return (\n    <div className=\"add-question\">\n      <div className=\"add-question-container\">\n        <div className=\"head-title\">\n          <h1>Ask a public question</h1>\n        </div>\n        <div className=\"question-container\">\n          <div className=\"question-options\">\n            <div className=\"question-option\">\n              <div className=\"title\">\n                <h3>Title</h3>\n                <small>\n                  Be specific and imagine youâ€™re asking a question to another\n                  person\n                </small>\n                <input\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"e.g Is there an R function for finding teh index of an element in a vector?\"\n                />\n              </div>\n            </div>\n            <div className=\"question-option\">\n              <div className=\"title\">\n                <h3>Body</h3>\n                <small>\n                  Include all the information someone would need to answer your\n                  question\n                </small>\n                <ReactQuill\n                  value={body}\n                  onChange={handleQuill}\n                  modules={Editor.modules}\n                  className=\"react-quill\"\n                  theme=\"snow\"\n                />\n              </div>\n            </div>\n            <div className=\"question-option\">\n              <div className=\"title\">\n                <h3>Tags</h3>\n                <small>\n                  Add up to 5 tags to describe what your question is about\n                </small>\n                {/* <input\n                  value={tag}\n                  onChange={(e) => setTag(e.target.value)}\n                  data-role=\"tagsinput\"\n                  data-tag-trigger=\"Space\"\n                  type=\"text\"\n                  placeholder=\"e.g. (asp.net-mvc php react json)\"\n                /> */}\n\n                <TagsInput\n                  value={tag}\n                  onChange={setTag}\n                  name=\"fruits\"\n                  placeHolder=\"press enter to add new tag\"\n                />\n\n                {/* <ChipsArray /> */}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <button onClick={handleSubmit} className=\"button\">\n          Add your question\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Index;\n","D:\\q-a\\frontend\\src\\components\\StackOverflow\\Sidebar.js",[],"D:\\q-a\\frontend\\src\\components\\StackOverflow\\Main.js",[],"D:\\q-a\\frontend\\src\\components\\ViewQuestion\\MainQuestion.js",[],"D:\\q-a\\frontend\\src\\components\\StackOverflow\\AllQuestions.js",["74"],"import { Avatar } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"./css/AllQuestions.css\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport { Link } from \"react-router-dom\";\nimport { stringAvatar } from \"../../utils/Avatar\";\n\nfunction AllQuestions({ data }) {\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  let tags = JSON.parse(data?.tags[0]);\n  // console.log();\n  return (\n    <div className=\"all-questions\">\n      <div className=\"all-questions-container\">\n        <div className=\"all-questions-left\">\n          <div className=\"all-options\">\n            <div className=\"all-option\">\n              <p>0</p>\n              <span>votes</span>\n            </div>\n            <div className=\"all-option\">\n              <p>{data?.answerDetails?.length}</p>\n              <span>answers</span>\n            </div>\n            <div className=\"all-option\">\n              <small>2 views</small>\n            </div>\n          </div>\n        </div>\n        <div className=\"question-answer\">\n          <Link to={`/question?q=${data?._id}`}>{data.title}</Link>\n\n          {/* <a href=>{data.title}</a> */}\n\n          <div\n            style={{\n              maxWidth: \"90%\",\n            }}\n          >\n            <div>{ReactHtmlParser(truncate(data.body, 200))}</div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n            }}\n          >\n            {tags.map((_tag) => (\n              <p\n                style={{\n                  margin: \"10px 5px\",\n                  padding: \"5px 10px\",\n                  backgroundColor: \"#007cd446\",\n                  borderRadius: \"3px\",\n                }}\n              >\n                {_tag}\n              </p>\n            ))}\n          </div>\n          <div className=\"author\">\n            <small>{data.create_at}</small>\n            <div className=\"auth-details\">\n              <Avatar {...stringAvatar(data?.user?.displayName)} />\n              <p>\n                {data?.user?.displayName\n                  ? data?.user?.displayName\n                  : \"Natalie lee\"}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AllQuestions;\n","D:\\q-a\\frontend\\src\\utils\\Avatar.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":13,"column":7,"nodeType":"81","messageId":"82","endLine":13,"endColumn":18},{"ruleId":"79","severity":1,"message":"83","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"84","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'firebaseApp' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]